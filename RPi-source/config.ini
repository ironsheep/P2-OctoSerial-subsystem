# Configuration file for P2-RPi-ioT-gw-daemon
# Source: https://github.com/ironsheep/P2-RPi-ioT-gateway
#
# Uncomment and adjust all settings as needed.
#
# Some settings can be configured by environment variables.
# If an env variable is set, it takes precedence over settings in this file

[Daemon]

# Enable or Disable an endless execution loop (Default: true)
#enabled = true

# This script reports RPi values at a fixed interval in minutes [2-30], [Default: 5]
#interval_in_minutes = 5

# default domain to use when hostname -f doesn't return a proper fqdn
#fallback_domain = home

# directories assigned to folder id's (uncomment and change to override)
#folder_tmp= /tmp/P2-RPi-ioT-gateway
#folder_var = /var/P2-RPi-ioT-gateway
#folder_control = /var/P2-RPi-ioT-gateway/control
#folder_status = /var/P2-RPi-ioT-gateway/status
#folder_log = /var/log/P2-RPi-ioT-gateway
#folder_mail = /var/P2-RPi-ioT-gateway/mail
#folder_proc = /var/P2-RPi-ioT-gateway/proc

[EMAIL]

# email transport is supported in two forms:
#  use_sendgrid: true/false
#   False means directly use the sendmail app
#   True means to use an external sendgrid account (this requires that the 'sendgrid_api_key' be configured!)
#
# by default (use_sendgrid = false) we use the sendmail(1) built-in command
#
#  uncomment the use_sendgrid, sendgrid_api_key, & sendgrid_api_key to enable use of SendGrid account
#   and, of course, fill in your own API key and From email address!

# use_sendgrid = true
# sendgrid_api_key = {api_key}
# sendgrid_from_addr = {sendgridFromAddress}

[MQTT]

# The hostname or IP address of the MQTT broker to connect to (Default: localhost)
# Also read from the MQTT_HOSTNAME environment variable
#hostname = localhost

# The TCP port the MQTT broker is listening on (Default: 1883)
# Also read from the MQTT_PORT environment variable
#port = 1883

# Maximum period in seconds between ping messages to the broker. (Default: 60)
#keepalive = 60

# by default Home Assistant listens to the /homeassistant but it can be changed for a given installation
#  likewise, by default this script advertises on the same default topic. If you use a different
#  discovery prefix then specify yours here.  [default: homeassistant]
#discovery_prefix = homeassistant

# NOTE: The MQTT topic used for this device is constructed as:
#  {base_topic}/{sensor_name}
#
# The MQTT base topic under which to publish the Raspberry Pi sensor data topics.
#base_topic = home/nodes

# The MQTT name for this Raspberry Pi as a sensor
#sensor_name = rpi-{hostname}


# The MQTT broker authentication credentials (Default: no authentication)
# Will also read from MQTT_USERNAME and MQTT_PASSWORD environment variables
#username = user
#password = pwd123

# Enable TLS/SSL on the connection
#tls = false

# Path to CA Certificate file to verify host
#tls_ca_cert =

# Path to TLS client auth key file
#tls_keyfile =

# Path to TLS client auth certificate file
#tls_certfile =

[RoadSys]

# The hostname or IP address of the CAVID text record server (No Default)
#hostname = localhost
hostname = 69.73.58.77


# The TCP port the record server is listening on (No Default)
# Also read from the MQTT_PORT environment variable
#port = 1883
port = 54003


# Maximum period in seconds before the TCP connection times out. (Default: 40)
#tcp_timeout = 40

# Maximum period in seconds before the TCP connection times out. (Default: 40)
#tcp_timeout = 40

# Maximum period in seconds between count writes. (Default: 3600, 0=write every increment)
#count_write_timeout = 3600

# Enable logging of received csv packets (Default=False)
#log_packets = False
log_packets = True

# Enable logging of received TCP packet fragments (Default=False)
#  (Developer: used for trouble shooting packet rebuild-from-fragments routines)
#log_pkt_fragments = False


# -------------------------
#  Our single count screen
# -------------------------
#        cidFmtDate1 = "Format:TIME:1:color=RAINBOW,line=1,alignment=CENTER"
#        cidFmtMessage1 = "Format:MESSAGE:1:color=RAINBOW,line=2,alignment=SCROLLING-LEFT"
#        cidFmtLabel1 = "Format:LABEL:1:color=RAINBOW,line=4,alignment=LEFT"
#        cidFmtValue1 = "Format:VALUE:1:color=RAINBOW,line=4,alignment=RIGHT,padWidth=5,padType=left-zeros"
#        cidFmtLabel2 = "Format:LABEL:2:color=RAINBOW,line=5,alignment=LEFT"
#        cidFmtValue2 = "Format:VALUE:2:color=RAINBOW,line=5,alignment=RIGHT,padWidth=6,padType=left-zeros"
#        cidFmtMessage2 = "Format:MESSAGE:2:color=RAINBOW,line=7,alignment=CENTER"

# Identify fields shown, location, color, formatting, etc.
cidFormat1 = "Format:TIME:1:color=ORANGE,line=1,alignment=CENTER"
cidFormat2 = "Format:MESSAGE:1:color=GREEN,line=2,alignment=SCROLLING-LEFT"
cidFormat3 = "Format:LABEL:1:color=YELLOW,line=4,alignment=LEFT"
cidFormat4 = "Format:VALUE:1:color=YELLOW,line=4,alignment=RIGHT,padWidth=4,padType=left-spaces"
cidFormat5 = "Format:LABEL:2:color=YELLOW,line=5,alignment=LEFT"
cidFormat6 = "Format:VALUE:2:color=YELLOW,line=5,alignment=RIGHT,padWidth=6,padType=left-spaces"
cidFormat7 = "Format:MESSAGE:2:color=ORANGE,line=7,alignment=CENTER"
cidFormatCount = 7

# Identify initial values for fields shown
cidValue1 = "Value:MESSAGE:1=Boca Tri-Rail Station  "
cidValue2 = "Value:LABEL:1=Today"
cidValue3 = "Value:LABEL:2=YTD"
cidValue4 = "Value:MESSAGE:2=Be Safe"
cidValueCount = 4

# Identify which classes should be counted
#  special named values: 'base1', and 'base2'
cidSum1 = "Sum:VALUE:1=PED,Bike+T,CYCLE"
cidSum2 = "Sum:VALUE:2={base1},{VALUE:1}"
cidSumCount = 2

# ---------------------------
#  Example dual count screen
# ---------------------------

# Identify fields shown, location, color, formatting, etc.
# cidFormat1 = "Format:TIME:1:color=ORANGE,line=1,alignment=CENTER"
# cidFormat2 = "Format:MESSAGE:1:color=GREEN,line=2,alignment=SCROLLING-LEFT"
# cidFormat3 = "Format:LABEL:1:color=YELLOW,line=3,alignment=LEFT"
# cidFormat4 = "Format:VALUE:1:color=YELLOW,line=3,alignment=RIGHT,padWidth=4,padType=left-spaces"
# cidFormat5 = "Format:LABEL:2:color=YELLOW,line=4,alignment=LEFT"
# cidFormat6 = "Format:VALUE:2:color=YELLOW,line=4,alignment=RIGHT,padWidth=6,padType=left-spaces"
# cidFormat7 = "Format:LABEL:3:color=YELLOW,line=5,alignment=LEFT"
# cidFormat8 = "Format:VALUE:3:color=YELLOW,line=5,alignment=RIGHT,padWidth=4,padType=left-spaces"
# cidFormat9 = "Format:LABEL:4:color=YELLOW,line=6,alignment=LEFT"
# cidFormat10 = "Format:VALUE:4:color=YELLOW,line=6,alignment=RIGHT,padWidth=6,padType=left-spaces"
# cidFormat11 = "Format:MESSAGE:2:color=ORANGE,line=7,alignment=CENTER"
# cidFormatCount = 11

# Identify initial values for fields shown
# cidValue1 = "Value:MESSAGE:1=Boca Tri-Rail Station  "
# cidValue2 = "Value:LABEL:1=Peds"
# cidValue3 = "Value:LABEL:2=YTD"
# cidValue4 = "Value:LABEL:3=Bikes"
# cidValue5 = "Value:LABEL:4=YTD"
# cidValue6 = "Value:MESSAGE:2=Be Safe"
# cidValueCount = 6

# Identify which classes should be counted
#  special named values: 'base1', and 'base2'
# cidSum1 = "Sum:VALUE:1=PED"
# cidSum2 = "Sum:VALUE:2={base1},{VALUE:1}"
# cidSum3 = "Sum:VALUE:3=Bike-T,CYCLE"
# cidSum4 = "Sum:VALUE:4={base2},{VALUE:3}"
# cidSumCount = 4
