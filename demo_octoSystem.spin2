CON { timing }

  CLK_FREQ = 300_000_000                                        ' system freq as a constant
'  MS_001   = CLK_FREQ / 1_000                                   ' ticks in 1ms
'  US_001   = CLK_FREQ / 1_000_000                               ' ticks in 1us

  BAUD_PST  = 115_200                                            ' terminal baud rate
  BAUD_OCTO_PORTS  = 115_200                                    ' our serial ports baud rate

  _clkfreq = CLK_FREQ                                           ' set system clock

CON { fixed io pins }

  RX1      = 63  { I }                                          ' programming / debug
  TX1      = 62  { O }

  SF_CS    = 61  { O }                                          ' serial flash
  SF_SCK   = 60  { O }
  SF_SDO   = 59  { O }
  SF_SDI   = 58  { I }

OBJ
        serPorts  : "isp_octoport_serial"               ' 8-port driver
        serQue    : "isp_string_queue"                  ' Rx Message Que

VAR

  byte  port_1                                                  ' named ports for testing
  byte  port_2
  byte  port_3


PUB main()| t
  ' testing setup only
  port_1 := serPorts.addport(8, 9, serPorts.MODE_NONE, BAUD_OCTO_PORTS)                       ' 1st open port
  port_2 := serPorts.addport(5, 6, serPorts.MODE_NONE, BAUD_OCTO_PORTS)                       ' 2nd open port
'  port_3 := addport(10, 11, %0000, BAUD_PST)                      ' 3rd open port
  debug(sdec(port_1))
  debug(sdec(port_2))

  serPorts.start()

  txtest()

PUB rxtest() | n
' test recieve
  n := serPorts.rx(0)

PUB txtest() | i, s
  ' test transmit
  i := 1
  repeat
    serPorts.tx(port_1, i)                                               ' output port 0
    serPorts.tx(1, i+10)                                                 ' output port 1
'    tx(port_2, i+15)                                           ' output port 1
    i++
    if i == 100
      i := 1
